---
- name: Restart rsyslog
  become: true
  service:
    name: rsyslog
    state: restarted
    enabled: yes
  changed_when: false

- name: Reload sysctl entries
  become: true
  shell: |
    `which sysctl` --system
  changed_when: false
  tags:
    - skip_ansible_lint

- name: Enable IOMMU in GRUB config
  become: true
  command: /usr/lib/storpool/enable_grub_iommu
  when:
    - not sp_vm | bool
    - sp_run_enable_grub_iommu | bool
  changed_when: false
  tags:
    - skip_ansible_lint

- name: Copy script to set default kernel
  copy:
    src: "files/sp_set_kernel"
    dest: "/tmp/sp_set_kernel"
    mode: 0755
  when:
    - sp_kernel_version is defined
    - not ansible_kernel | regex_search("^" + sp_kernel_version)

- name: Set default kernel
  command: "/tmp/sp_set_kernel {{ sp_kernel_version }}"
  when:
    - sp_kernel_version is defined
    - not ansible_kernel | regex_search("^" + sp_kernel_version)

- name: Check kernel cmdline
  command:
    argv:
      - "/usr/lib/storpool/kernel_cmdline_check"
      - "--exit-code"
      - "2"
  ignore_errors: true
  register: kernel_cmdline_check

- name: Check if reboot is needed to apply new kernel or parameters
  set_fact:
    needs_reboot_kernel: true
  when: >
    (
      sp_kernel_version is defined
      and (not ansible_kernel | regex_search("^" + sp_kernel_version))
    )
    or
    kernel_cmdline_check.rc == 2

- name: Test Memory - check on async task
  become: true
  async_status:
    jid: "{{ memory_test_sleeper.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: 200
  delay: 30
  when:
    - sp_vm is defined
    - not sp_vm | bool
    - memory_test_sleeper is defined
    - memory_test_sleeper.ansible_job_id is defined

- name: Include distro-specific tasks
  include_tasks: "subtasks/post_install_{{ ansible_os_family|lower }}.yml"

- name: Reboot to apply kernel parameters
  become: true
  command: reboot
  async: 1
  poll: 0
  when:
    - needs_reboot_kernel is defined
    - needs_reboot_kernel | bool 

- name: Waiting for host to get back from reboot
  wait_for_connection:
    connect_timeout: 5
    delay: 15
    sleep: 2
    timeout: 600
  when:
    - needs_reboot_kernel is defined
    - needs_reboot_kernel | bool 

- name: Gather facts anew after reboot
  gather_facts:
    parallel: yes
  when:
    - needs_reboot_kernel is defined
    - needs_reboot_kernel | bool 

- name: Verify we are using the specified kernel
  assert:
    that:
      - ansible_kernel | regex_search("^" + sp_kernel_version)
    success_msg: "Running expected kernel {{ sp_kernel_version }}"
    fail_msg: "Running unexpected kernel {{ ansible_kernel }}"
  when: sp_kernel_version is defined

- name: Verify kernel parameters are applied
  command:
    argv:
      - "/usr/lib/storpool/kernel_cmdline_check"
      - "--exit-code"
      - "2"