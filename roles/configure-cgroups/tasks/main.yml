---
# tasks file for configure-cgroups
- name: Checking if StorPool cgroup configuration exists
  stat:
    path: /etc/cgconfig.d/storpool.slice.conf
  register: sp_slice_conf_file

- name: Checking if the running kernel is booted with the latest grub parameters
  command:
    cmd: /usr/lib/storpool/kernel_cmdline_check -e 254
  failed_when: kernels_parameters_present.rc != 254
  register: kernels_parameters_present

- name: Get latest installed kernel
  command:
    cmd: /usr/bin/sp-python3 -c 'from sp.tools import abrtsync ; kernels = abrtsync.get_sorted_kernels() ; assert kernels ; print(kernels[-1])'
  register: latest_kernel_version

- name: Kexec reboot host
  command:
    cmd: '/usr/sbin/prepare_kexec {{latest_kernel_version.stdout}} --append-grubdefault --execute'
  when: kernels_parameters_present.rc == 254
  async: 1
  poll: 0

- name: Waiting for host to get back from kexec
  wait_for_connection:
    connect_timeout: 5
    delay: 15
    sleep: 2
    timeout: 600

- name: Checking if the kernel has memory swap cgroup enabled
  stat:
    path: /sys/fs/cgroup/memory/memory.memsw.usage_in_bytes
  register: cgroup_memsw_file

- name: Setting set_memsw fact
  set_fact:
    sp_cg_set_memsw: '{{ "1" if cgroup_memsw_file.stat.exists else "0" }}'
    cacheable: true

- name: Dumping sp_cg_conf_extra value
  debug:
    var: sp_cg_conf_extra
    verbosity: 2

- name: Generating cgroup configuration files
  become: true
  command:
    cmd: >-
      {{ sp_cgtool_bin }}
      conf
      converged={{ "1" if sp_cg_hyperconverged else "0" }}
      {% if sp_cg_conf_extra | length > 0 %}
      {{ sp_cg_conf_extra }}
      {% endif %}
      SET_MEMSW={{ sp_cg_set_memsw }}
  when: not sp_slice_conf_file.stat.exists
  notify: 'start cgconfig'

- name: Migrating cgroup configuration
  become: true
  command:
    cmd: >-
      {{ sp_cgtool_bin }}
      conf -M -E
      converged={{ "1" if sp_cg_hyperconverged else "0" }}
      {% if sp_cg_conf_extra | length > 0 %}
      {{ sp_cg_conf_extra }}
      {% endif %}
      SET_MEMSW={{ sp_cg_set_memsw }}
  when: sp_slice_conf_file.stat.exists
